<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="upBtn.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <data name="upBtn.ImageStream" mimetype="application/x-microsoft.net.object.binary.base64">
    <value>
        AAEAAAD/////AQAAAAAAAAAMAgAAAFdTeXN0ZW0uV2luZG93cy5Gb3JtcywgVmVyc2lvbj00LjAuMC4w
        LCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkFAQAAACZTeXN0
        ZW0uV2luZG93cy5Gb3Jtcy5JbWFnZUxpc3RTdHJlYW1lcgEAAAAERGF0YQcCAgAAAAkDAAAADwMAAAAU
        DgAAAk1TRnQBSQFMAgEBAwEAAWABAAFgAQABGQEAARkBAAT/ASEBAAj/AUIBTQE2BwABNgMAASgDAAFk
        AwABGQMAAQEBAAEgBQABEAEn/wD/AP8AUQADBAEFAyYBOANEAXkDUwGpA1wByANdAdQDWgHEA1EBoQNA
        AW8DIgExBAL/AGEAAyEBMANQAZwDXAHZA1QB7AM5AfUDIQH7AxgB/QMgAfoDRAHzA1QB6gNdAdQDTAGO
        AxsBJiAAAykBPQNSAagDXQHRA1wB1gNcAdYDXAHWA1wB1gNcAdYDXAHWA1wB1gNcAdYDXAHWA1wB1gNc
        AdYDXAHWA1wB1gNcAdYDXAHWA10BzgNQAZ0DJQE35AADMwFRA1oBvwNKAfEDWAHrA1gBuANFAXwDMgFP
        AysBQgM1AVUDRwGDA1kBwQNMAe8DUAHuA1UBtAMrAUIcAANVAbQDSgHxAwwB/gMAAf8DAAH/AwAB/wMA
        Af8DAAH/AwAB/wMAAf8DAAH/AwAB/wMAAf8DAAH/AwAB/wMAAf8DAAH/AwAB/wMYAf0DUgHtA1MBqigA
        A0oBiwNdAcwDMwFSDAADNwFaA10BzANHAYOUAAMxAU4DWQHGA0wB7wNQAZoDMAFKAx0BKAMRARYDBgEI
        AwMBBAMIAQoDEgEYAx4BKwM0BFMBpgNMAe8DWQG7AysBQhgAA1kB5AMMAf4DOAFcAykBPQMpAT0DKQE9
        AykBPQMpAT0DKQE9AykBPQMpAT0DKQE9AykBPQMpAT0DKQE9AykBPQMpAT0DKQE9AzsBZAMMAf4DXwHa
        KAADVQGtAwAB/wM8AWYMAANAAXADAAH/A1IBo5AAAx8BLANaAb8DSAHyA0kBhgMeASsDBgEHHAADBwEJ
        AyMBMwNNAZMDRAHzA1YBswMbASUUAANYAesDAAH/Ax0BKTwAAyMBMwMAAf8DXQHgKAADVQGtAwAB/wM8
        AWYMAANAAXADAAH/A1IBo4wAAwUBBgNPAZsDSAHyA1MBpgMgAS0DAwEEJAADBAEFAyUBNwNWAbIDUgHt
        A0sBjQMDAQQQAANYAesDAAH/Ax0BKRAAAyMBMgMdASkDBgEHBAADBwEJAx8BLAMgAS0QAAMjATMDAAH/
        A10B4CgAA1UBrQMAAf8DPAFmDAADQAFwAwAB/wNSAaOMAAMnAToDWwHeA1UB6QMwAUsDBwEJLAADCQEM
        AzYBWANSAe0DXQHUAyMBMxAAA1gB6wMAAf8DHQEpDAADIAEtA08BmwNVAawDMAFMAw4BEgMzAVIDVQGu
        A00BkwMdASgMAAMjATMDAAH/A10B4BgAA0oBiQNSAaMDUgGjA1IBowNcAeIDAAH/AzwBZgwAA0ABcAMA
        Af8DWwHeA1IBowNSAaMDUgGjA0cBg3wAA0YBfgNKAfEDVQGtAxgBIDQAAx0BKQNYAbcDWAHrA0IBdBAA
        A1gB6wMAAf8DHQEpDAADGwEmA1IBqANSAe0DWQG7A0wBkQNaAb8DUgHtA1ABnwMZASIMAAMjATMDAAH/
        A10B4BgAA1wB1gMAAf8DAAH/AwAB/wMAAf8DAAH/AzwBZgwAA0ABcAMAAf8DAAH/AwAB/wMAAf8DAAH/
        A10BzHwAA1YBswMyAfgDPQFpAwwBDzQAAw8BFANCAXUDOQH1A1IBqBAAA1gB6wMAAf8DHQEpDAADBgEH
        Ay4BSANWAbYDUAHuA0oB8QNSAe0DVQGxAywBQwMFAQYMAAMjATMDAAH/A10B4BgAAzkBXgNAAXADQAFw
        A0ABcANAAXADQAFwAyABLQwAAyIBMQNAAXADQAFwA0ABcANAAXADQAFwAzcBWnwAA10B1AMYAfwDKwFB
        AwUBBgQAAzoBYANJAYUDSQGFA0kBhQNJAYUDSQGFA0kBhQNJAYUDSQGFA0kBhQM3AVoEAAMGAQgDMAFM
        AyEB+wNdAckQAANYAesDAAH/Ax0BKRAAAwsBDgNKAYoDUAHuAwAB/wNYAesDRgGBAwkBDBAAAyMBMwMA
        Af8DXQHg2AADXgHhAwwB/gMjATIEAgQAA1gBuAMAAf8DAAH/AwAB/wMAAf8DAAH/AwAB/wMAAf8DAAH/
        AwAB/wNVAa0EAAMDAQQDKgFAAxgB/QNdAdQQAANYAesDAAH/Ax0BKQwAAwYBCAMxAU4DWQG7A1IB7QNJ
        AfADUgHtA1UBtAMvAUkDBgEHDAADIwEzAwAB/wNdAeDYAANeAdsDGAH9AyYBOQMDAQQEAAM9AWcDSwGP
        A0sBjwNLAY8DSwGPA0sBjwNLAY8DSwGPA0sBjwNLAY8DOgFhBAADBwEJAzMBUAMgAfoDWQHGEAADWAHr
        AwAB/wMdASkMAAMdASkDVAGrA1AB7gNYAbcDSgGJA1kBuwNSAe0DUgGjAxsBJQwAAyMBMwMAAf8DXQHg
        2AADWQHBAyAB+gM5AV4DCgENNAADEAEVA0QBegM/AfQDUgGjEAADWAHrAwAB/wMdASkMAAMeASsDTgGX
        A1MBpgMuAUgDDQERAzEBTgNSAagDSwGPAxwBJwwAAyMBMwMAAf8DXQHgGAADNQFWAzwBZgM8AWYDPAFm
        AzwBZgM8AWYDHQEpDAADIAEtAzwBZgM8AWYDPAFmAzwBZgM8AWYDMwFSfAADTAGOA0QB8wNSAaMDFQEd
        MAAEAQMeASoDVwG5A1gB6wNAAXAQAANYAesDAAH/Ax0BKRAAAyEBMAMcAScDBQEGBAADBgEIAx4BKgMe
        ASsQAAMjATMDAAH/A10B4BgAA1wB1gMAAf8DAAH/AwAB/wMAAf8DAAH/AzwBZgwAA0ABcAMAAf8DAAH/
        AwAB/wMAAf8DAAH/A10BzHwAAy0BRgNcAeIDWgHmAy0BRQMGAQcsAAMJAQsDNgFXA0wB7wNdAdQDIgEx
        EAADWAHrAwAB/wMdASk8AAMjATMDAAH/A10B4BgAA00BkgNVAa0DVQGtA1UBrQNcAeUDAAH/AzwBZgwA
        A0ABcAMAAf8DXAHiA1UBrQNVAa0DVQGtA0oBi3wAAwYBCANTAaYDPwH0A1ABnwMeASoDAgEDJAADBAEF
        AyQBNQNWAbADUAHuA0wBkQMCAQMQAANYAesDAAH/AzsBZQMuAUcDLgFHAy4BRwMuAUcDLgFHAy4BRwMu
        AUcDLgFHAy4BRwMuAUcDLgFHAy4BRwMuAUcDLgFHAy4BRwM/AWwDAAH/A10B4CgAA1UBrQMAAf8DPAFm
        DAADQAFwAwAB/wNSAaOQAAMjATMDWQHGA0QB8wNGAYEDHAEnAwUBBhwAAwYBCAMgAS4DSwGPAz8B9ANY
        AbgDGwEmFAADWAHrAwAB/wMAAf8DAAH/AwAB/wMAAf8DAAH/AwAB/wMAAf8DAAH/AwAB/wMAAf8DAAH/
        AwAB/wMAAf8DAAH/AwAB/wMAAf8DAAH/AwAB/wNdAeAoAANVAa0DAAH/AzwBZgwAA0ABcAMAAf8DUgGj
        lAADNQFWA10BzANKAfEDTgGWAywBQwMZASIDDwETAwYBBwMCAQMDBgEIAw8BFAMaASQDMAFKA1EBoQNI
        AfIDVwHCAy0BRhgAA1oB5gMMAf4DAAH/AwAB/wMAAf8DAAH/AwAB/wMAAf8DAAH/AwAB/wMAAf8DAAH/
        AwAB/wMAAf8DAAH/AwAB/wMAAf8DAAH/AwAB/wMMAf4DXwHaKAADVQGtAwAB/wM8AWYMAANAAXADAAH/
        A1IBo5gAAzUBVgNbAcUDRAHzA1QB7ANYAbcDQwF3Ay4BSAMlATYDMAFKA0QBewNXAbwDUAHuA0oB8QNY
        Ab0DLwFJHAADVwG8A0QB8wMMAf4DAAH/AwAB/wMAAf8DAAH/AwAB/wMAAf8DAAH/AwAB/wMAAf8DAAH/
        AwAB/wMAAf8DAAH/AwAB/wMAAf8DDAH+A0kB8ANVAa4oAANNAZIDXAHWAzUBVgwAAzkBXgNcAdYDSgGJ
        nAADIgExA1IBoANcAd8DSgHxAzYB9wMYAfwDGAH9AyEB+wM2AfcDSQHwA10B3ANOAZYDHgEqIAADKgFA
        A1UBrwNeAdsDXQHgA10B4ANdAeADXQHgA10B4ANdAeADXQHgA10B4ANdAeADXQHgA10B4ANdAeADXQHg
        A10B4ANdAeADXAHZA1MBqQMmATnsAAMEAQUDJwE6A0YBfQNVAa8DXQHRA10B3QNdAc8DVQGsA0QBeAMk
        ATUDAgED/wD/AP8A/wBsAAFCAU0BPgcAAT4DAAEoAwABZAMAARkDAAEBAQABAQUAAZABARYAA/8BAAn/
        AeAGAAn/AeAGAAH+AQABPwb/AeAGAAH8AQABHwHgAgAD/wHgBgAB+AEAAQ8B4AIAAf8BxwEfAeAGAAHw
        AQABBwHgAgAB/wHHAR8B4AYAAeABfwEDAeMB/wH4Af8BxwEfAeAGAAHAAf8BgQHjAcQBeAH/AccBHwHg
        BgABwQH/AcEB4wGAATgB/AEHAQEB4AYAAcMB/wHhAeMBgAE4AfwBBwEBAeAGAAHDAf8B4QHjAYABOAH8
        AQcBAQHgBgABwgEAASEB4wHAAXgD/wHgBgABwgEAASEB4wGAATgD/wHgBgABwgEAASEB4wGAATgD/wHg
        BgABwwH/AeEB4wGAATgB/AEHAQEB4AYAAcMB/wHBAeMBxAF4AfwBBwEBAeAGAAHBAf8BwQHjAf8B+AH8
        AQcBAQHgBgABwAH/AYEB4AIAAf8BxwEfAeAGAAHgAX8BAwHgAgAB/wHHAR8B4AYAAfABAAEHAeACAAH/
        AccBHwHgBgAB+AEAAQ8B4AIAAf8BxwEfAeAGAAH8AQABHwHgAgAD/wHgBgAB/gEAAT8G/wHgBgAJ/wHg
        BgAJ/wHgBgAL
</value>
  </data>
  <metadata name="tmr.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>103, 17</value>
  </metadata>
</root>